name: Deck Application

# build.yml
on:
  pull_request:
    paths:
      - deck/app/**
  push:
    paths:
      - deck/app/**
    branches: # array of glob patterns matching against refs/heads. Optional; defaults to all
      - master # triggers on pushes that contain changes in master

# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-envvars.html
env:
  AWS_DEFAULT_REGION: eu-east-1
  AWS_DEFAULT_OUTPUT: json
  AWS_ACCOUNT_ID: "833104194858"
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  CONTAINER_IMAGE: qa-bootcamp_deck:${{ github.sha }}

jobs:
  build-and-push:
    name: Build and deploy
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: "11"
          distribution: "adopt"

      - name: Build Project
        working-directory: ./deck
        run: ./gradlew build

      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ AWS_DEFAULT_REGION }}

      - name: Setup ECR
        run: |
          # Login to AWS ECR
          aws ecr get-login-password --region $AWS_DEFAULT_REGION | \
          docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com

      - name: Build and tag the image
        working-directory: ./deck
        run: |
          # Build and tag the image
          docker build \
            --build-arg JAR_FILE="app/build/libs/*.jar" \
            --file ./app/devops/Dockerfile \
            -t $CONTAINER_IMAGE \
            -t $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE .
      
      # Only push to registry on master
      - name: Push
        if: github.ref == 'refs/heads/master'
        run: |
          # Push image to AWS ECR
          docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$CONTAINER_IMAGE
